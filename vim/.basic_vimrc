" NOTE: THIS IS A BASIC .vimrc FILE WITH MINIMAL CONFIGS
" RENAME IT TO .vimrc IF YOU WANT TO USE IT

syntax enable


set backspace=indent,eol,start
let mapleader = ','                  "The default leader is /, but we specified comma as the default
set number                           "This activates line numbers


" ------------ TAB CONFIGS ------------ "
set tabstop=4
set softtabstop=4
set expandtab   " expands your tabs into spaces


" ------------ VISUALS ------------ "
colorscheme slate
set guifont=Fira_Mono_For_Powerline:15 " if font has spaces, delimit with underscore


" --------------- MAPPINGS --------------- "
" In Vim the term 'mapping' is the same as keybinding.
" For example an 'imap' is mapping for Insert Mode, 'nmap' is mapping for 
" Normal Mode.


" when you enter ',ev' command, you will edit your .vimrc file
" and $MYVIMRC always references your .vimrc file on your machine. After
" editing it, save it, and source it via `:so %` command.
nmap ,ev :e $MYVIMRC<cr>    " btw, the <cr> is simply a symbol for <Enter>


" --------------- MY AUTO-COMMANDS ------------- "
" This line will auto-source your .vimrc file every time you edit it
autocmd BufWritePost .vimrc        " it listens to when we write to a buffer



" -------------- ENCRYPTION -------------- "
" Our default encryption method (which you can change to something else)
set cryptmethod=blowfish2



" --------------- MY OTHER CONFIGS ---------- "
set laststatus=2        " always show the status line

" Format the status line
" Note that you can put a lot of things in your status bar
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c


syntax on                           " to highlight language syntax
set showmatch                       " show matching brack      ets
set ignorecase                      " Do case insensitive matching
set incsearch                       " show partial matches for a search phrase
set nopaste                         " allows you to paste code without Vim trying to format it
set number                          " show line numbers
set undolevels=1000                 " how many undos you can make



" ------------------ SEARCH -------------------- "
set hlsearch                        " This will highlight all instances of the searched word when
                                    " you execute:  /<searched word> + Enter
set incsearch                       " Sets the incremental search
nmap <Leader><space> :nohlsearch<cr>            " turns highlighting off after hitting ",<space>"
                                                " or "/<space>", depending on what you set as the <leader>

